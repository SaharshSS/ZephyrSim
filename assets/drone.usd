#usda 1.0
(
    "ZephyrSim Drone Asset"
    defaultPrim = "Drone"
)

def Xform "Drone" (
    kind = "component"
)
{
    def Mesh "Body" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsRigidBodyAPI"]
    )
    {
        float3[] extent = [(-0.2, -0.1, -0.2), (0.2, 0.1, 0.2)]
        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
        int[] faceVertexIndices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]
        point3f[] points = [(-0.2, -0.1, -0.2), (0.2, -0.1, -0.2), (0.2, 0.1, -0.2), (-0.2, 0.1, -0.2), (-0.2, -0.1, 0.2), (0.2, -0.1, 0.2), (0.2, 0.1, 0.2), (-0.2, 0.1, 0.2)]
        color3f[] primvars:displayColor = [(0.2, 0.2, 0.2)]
        float3 xformOp:scale = (1, 1, 1)
        uniform token[] xformOpOrder = ["xformOp:scale"]
    }
    
    def Xform "Propeller1" (
        prepend apiSchemas = ["PhysicsCollisionAPI"]
    )
    {
        double3 xformOp:translate = (0.3, 0.3, 0)
        uniform token[] xformOpOrder = ["xformOp:translate"]
        
        def Cylinder "Propeller" (
            prepend apiSchemas = ["PhysicsCollisionAPI"]
        )
        {
            float height = 0.02
            float radius = 0.15
            color3f[] primvars:displayColor = [(0.8, 0.8, 0.8)]
        }
    }
    
    def Xform "Propeller2" (
        prepend apiSchemas = ["PhysicsCollisionAPI"]
    )
    {
        double3 xformOp:translate = (-0.3, 0.3, 0)
        uniform token[] xformOpOrder = ["xformOp:translate"]
        
        def Cylinder "Propeller" (
            prepend apiSchemas = ["PhysicsCollisionAPI"]
        )
        {
            float height = 0.02
            float radius = 0.15
            color3f[] primvars:displayColor = [(0.8, 0.8, 0.8)]
        }
    }
    
    def Xform "Propeller3" (
        prepend apiSchemas = ["PhysicsCollisionAPI"]
    )
    {
        double3 xformOp:translate = (0.3, -0.3, 0)
        uniform token[] xformOpOrder = ["xformOp:translate"]
        
        def Cylinder "Propeller" (
            prepend apiSchemas = ["PhysicsCollisionAPI"]
        )
        {
            float height = 0.02
            float radius = 0.15
            color3f[] primvars:displayColor = [(0.8, 0.8, 0.8)]
        }
    }
    
    def Xform "Propeller4" (
        prepend apiSchemas = ["PhysicsCollisionAPI"]
    )
    {
        double3 xformOp:translate = (-0.3, -0.3, 0)
        uniform token[] xformOpOrder = ["xformOp:translate"]
        
        def Cylinder "Propeller" (
            prepend apiSchemas = ["PhysicsCollisionAPI"]
        )
        {
            float height = 0.02
            float radius = 0.15
            color3f[] primvars:displayColor = [(0.8, 0.8, 0.8)]
        }
    }
} 