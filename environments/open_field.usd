#usda 1.0
(
    "ZephyrSim Open Field Environment"
    defaultPrim = "OpenField"
)

def Xform "OpenField" (
    kind = "component"
)
{
    def Mesh "Ground" (
        prepend apiSchemas = ["PhysicsCollisionAPI"]
    )
    {
        float3[] extent = [(-100, 0, -100), (100, 0, 100)]
        int[] faceVertexCounts = [4]
        int[] faceVertexIndices = [0, 1, 2, 3]
        point3f[] points = [(-100, 0, -100), (100, 0, -100), (100, 0, 100), (-100, 0, 100)]
        color3f[] primvars:displayColor = [(0.3, 0.6, 0.2)]
        float3 xformOp:scale = (1, 1, 1)
        uniform token[] xformOpOrder = ["xformOp:scale"]
    }
    
    def Xform "Sky" (
        prepend apiSchemas = ["PhysicsCollisionAPI"]
    )
    {
        def Sphere "SkyDome" (
            prepend apiSchemas = ["PhysicsCollisionAPI"]
        )
        {
            float radius = 200
            color3f[] primvars:displayColor = [(0.5, 0.7, 1.0)]
        }
    }
    
    def Xform "Trees" (
        prepend apiSchemas = ["PhysicsCollisionAPI"]
    )
    {
        def Xform "Tree1" (
            prepend apiSchemas = ["PhysicsCollisionAPI"]
        )
        {
            double3 xformOp:translate = (20, 0, 20)
            uniform token[] xformOpOrder = ["xformOp:translate"]
            
            def Cylinder "Trunk" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                float height = 5
                float radius = 0.5
                color3f[] primvars:displayColor = [(0.4, 0.2, 0.1)]
            }
            
            def Sphere "Leaves" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                double3 xformOp:translate = (0, 3, 0)
                uniform token[] xformOpOrder = ["xformOp:translate"]
                float radius = 3
                color3f[] primvars:displayColor = [(0.2, 0.5, 0.1)]
            }
        }
        
        def Xform "Tree2" (
            prepend apiSchemas = ["PhysicsCollisionAPI"]
        )
        {
            double3 xformOp:translate = (-30, 0, 40)
            uniform token[] xformOpOrder = ["xformOp:translate"]
            
            def Cylinder "Trunk" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                float height = 6
                float radius = 0.6
                color3f[] primvars:displayColor = [(0.4, 0.2, 0.1)]
            }
            
            def Sphere "Leaves" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                double3 xformOp:translate = (0, 3.5, 0)
                uniform token[] xformOpOrder = ["xformOp:translate"]
                float radius = 3.5
                color3f[] primvars:displayColor = [(0.2, 0.5, 0.1)]
            }
        }
    }
    
    def Xform "Rocks" (
        prepend apiSchemas = ["PhysicsCollisionAPI"]
    )
    {
        def Sphere "Rock1" (
            prepend apiSchemas = ["PhysicsCollisionAPI"]
        )
        {
            double3 xformOp:translate = (10, 0.5, -15)
            uniform token[] xformOpOrder = ["xformOp:translate"]
            float radius = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
        }
        
        def Sphere "Rock2" (
            prepend apiSchemas = ["PhysicsCollisionAPI"]
        )
        {
            double3 xformOp:translate = (-25, 0.3, 10)
            uniform token[] xformOpOrder = ["xformOp:translate"]
            float radius = 0.8
            color3f[] primvars:displayColor = [(0.4, 0.4, 0.4)]
        }
    }
} 